) %>%
mutate_if(is.numeric, ~if_else(. %nin% c(Inf, -Inf, NaN), ., NULL)) %>%
## Moving average
arrange(date, state) %>%
group_by(state) %>%
mutate(
cases_new_ma7 = rollmean(cases_new, k = 7, fill = NA),
cases_new_adjust_ma7 = rollmean(cases_new_ma7, k = 7, fill = NA, align = "right")
) %>%
ungroup()
rm(temp_nation, dt_daily)
## Cumulative
sum_cum <- dt_daily_state %>%
group_by(state) %>%
summarise(
cumul_cases_new = sum(cases_new, na.rm = TRUE),
cumul_cases_new_adjust = sum(cases_new_adjust, na.rm = TRUE),
cumul_deaths_new = sum(deaths_new, na.rm = TRUE),
cumul_deaths_new_adjust = sum(deaths_new_adjust, na.rm = TRUE),
# cum_recover = sum(cases_recovered, na.rm = TRUE)
) %>%
# mutate(
#   cum_active = cum_case - cum_recover,
#   cum_active_adj = cum_active*100000/32657400
# ) %>%
rename(name = state)
temp <- dt_daily_state %>% select(date, state, cases_new_adjust, cases_new_adjust_ma7)
dt_daily <- dt_case_state %>%
select(date, state, cases_new, cases_recovered) %>%
left_join(dt_death_state) %>%
left_join(dt_hospital) %>%
left_join(dt_icu %>%
mutate(beds_icu_covid = if_else((beds_icu_covid == 0) & (state == "Johor"), as.integer(10), beds_icu_covid))) %>%
left_join(dt_pkrc %>%
rename(
pkrc_beds = beds,
pkrc_admitted_pui = admitted_pui,
pkrc_admitted_covid = admitted_covid,
pkrc_admitted_total = admitted_total,
pkrc_discharge_pui = discharge_pui,
pkrc_discharge_covid = discharge_covid,
pkrc_discharge_total = discharge_total,
)) %>%
mutate(date = as.Date(date)) %>%
left_join(dt_vac_state %>%
select(date, state, daily_full, cumul_full, contains("2"), cansino) %>%
mutate(date = as.Date(date) + 14)) %>% ## delay 14 days for full
left_join(dt_population %>% select(state, pop))
temp_nation <- dt_daily %>%
group_by(date) %>%
summarise_if(is.numeric, sum, na.rm = TRUE) %>%
mutate(state = "All") %>%
ungroup()
dt_daily_state <- dt_daily %>%
add_row(temp_nation) %>%
mutate_if(is.numeric, ~replace_na(., 0)) %>%
mutate(
hosp_netflow = admitted_total - discharged_total,
pkrc_netflow = pkrc_admitted_total - pkrc_discharge_total
) %>%
group_by(state) %>%
mutate(
## hospital
cumul_hosp_netflow = cumsum(hosp_netflow),
cumul_remain_bed = beds_covid - cumul_hosp_netflow,
cumul_hosp_netflow_rate = round(cumul_hosp_netflow*100/beds, digits = 2),
cumul_remain_bed_rate = round(cumul_remain_bed*100/beds, digits = 2),
## pkrc
cumul_pkrc_netflow = cumsum(pkrc_netflow),
cumul_remain_pkrc_bed = pkrc_beds - cumul_pkrc_netflow,
cumul_pkrc_netflow_rate = round(cumul_pkrc_netflow*100/pkrc_beds, digits = 2),
cumul_remain_pkrc_rate = round(cumul_remain_pkrc_bed*100/pkrc_beds, digits = 2),
## icu & vent
remain_icu_covid_rate = round((beds_icu_covid - icu_covid - icu_pui - icu_noncovid)*100/beds_icu_covid, digits = 2),
remain_vent_covid_rate = round((vent - vent_covid - vent_pui - vent_noncovid)*100/vent, digits = 2)
) %>%
ungroup() %>%
## Per population
mutate(
cumul_not_full = pop - cumul_full, ## not having fully vaccination
cases_new_adjust = cases_new*100000/pop,
deaths_new_adjust = deaths_new*1000000/pop,
daily_full_adjust = daily_full*10000/pop,
cumul_full_adjust = cumul_full*100000/pop,
cumul_not_full_adjust = cumul_not_full*100/pop,
beds_adjust = beds*100000/pop,
beds_covid_adjust = beds_covid*100000/pop,
beds_noncrit_adjust = beds_noncrit*100000/pop,
beds_icu_total_adjust = beds_icu_total*100000/pop,
beds_icu_covid_adjust = beds_icu_covid*100000/pop,
vent_adjust = vent*100000/pop,
pkrc_beds_adjust = pkrc_beds*100000/pop
) %>%
mutate_if(is.numeric, ~if_else(. %nin% c(Inf, -Inf, NaN), ., NULL)) %>%
arrange(date, state)
# moving average
temp <- dt_daily_state %>%
group_by(state) %>%
mutate(
cases_new_ma7 = rollmean(cases_new, k = 7, fill = NA),
cases_new_adjust_ma7 = rollmean(cases_new_ma7, k = 7, fill = NA, align = "right")
) %>%
ungroup() %>%
select(date, state, cases_new_ma7, cases_new_adjust_ma7)
View(temp)
# moving average
temp <- dt_daily_state %>%
arrange(desc(state)) %>%
group_by(state) %>%
mutate(
cases_new_ma7 = rollmean(cases_new, k = 7, fill = NA),
cases_new_adjust_ma7 = rollmean(cases_new_ma7, k = 7, fill = NA, align = "right")
) %>%
ungroup() %>%
select(date, state, cases_new_ma7, cases_new_adjust_ma7)
# moving average
temp <- dt_daily_state %>%
arrange(date, state) %>%
group_by(state, date) %>%
mutate(
cases_new_ma7 = rollmean(cases_new, k = 7, fill = NA, align = "right"),
cases_new_adjust_ma7 = rollmean(cases_new_ma7, k = 7, fill = NA, align = "right")
) %>%
ungroup() %>%
select(date, state, cases_new_ma7, cases_new_adjust_ma7)
# moving average
temp <- dt_daily_state %>%
arrange(state, date) %>%
group_by(state) %>%
mutate(
cases_new_ma7 = rollmean(cases_new, k = 7, fill = NA, align = "right"),
cases_new_adjust_ma7 = rollmean(cases_new_ma7, k = 7, fill = NA, align = "right")
) %>%
ungroup() %>%
select(date, state, cases_new_ma7, cases_new_adjust_ma7)
View(temp)
# moving average
temp <- dt_daily_state %>%
arrange(state, date) %>%
group_by(state) %>%
mutate(
cases_new_ma7 = rollmean(cases_new, k = 7, fill = NA, align = "right"),
cases_new_adjust_ma7 = rollmean(cases_new_adjust, k = 7, fill = NA, align = "right")
) %>%
ungroup() %>%
select(date, state, cases_new, cases_new_ma7, cases_new_adjust, cases_new_adjust_ma7)
plot_ly(
data = temp %>% filter(state %in% c("All", "W.P. Kuala Lumpur")),
x = ~date, y = ~cases_new_adjust, color = ~state,
type = "bar", barmode = "stack"
) %>%
add_trace(
x = ~date, y = ~cases_new_adjust_ma7, color = ~state,
type = "scatter", mode = "lines"
) %>%
layout(
yaxis = list(title = "Daily incidence case per 100K population"),
xaxis = list(title = "Date", rangeslider = list(type = "date")),
legend = list(title = list(text = "<b> States </b>"), orientation = "h", y = 100)
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::deployApp("D:/Projects/Covid/COVMAL")
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
View(dt_daily_state)
View(sum_cum)
View(dt_daily_state)
## Cumulative
sum_cum <- dt_daily_state %>%
group_by(state) %>%
summarise(
cumul_cases_new = sum(cases_new, na.rm = TRUE),
cumul_cases_new_adjust = sum(cases_new_adjust, na.rm = TRUE),
cumul_deaths_new = sum(deaths_new, na.rm = TRUE),
cumul_deaths_new_adjust = sum(deaths_new_adjust, na.rm = TRUE),
cumul_daily_full = sum(daily_full, na.rm = TRUE),
cumul_daily_full_adjust = sum(daily_full_adjust, na.rm = TRUE),
# cum_recover = sum(cases_recovered, na.rm = TRUE)
) %>%
# mutate(
#   cum_active = cum_case - cum_recover,
#   cum_active_adj = cum_active*100000/32657400
# ) %>%
rename(name = state)
dt_daily_state <- dt_daily %>%
add_row(temp_nation) %>%
mutate_if(is.numeric, ~replace_na(., 0)) %>%
mutate(
hosp_netflow = admitted_total - discharged_total,
pkrc_netflow = pkrc_admitted_total - pkrc_discharge_total
) %>%
group_by(state) %>%
mutate(
## hospital
cumul_hosp_netflow = cumsum(hosp_netflow),
cumul_remain_bed = beds_covid - cumul_hosp_netflow,
cumul_hosp_netflow_rate = round(cumul_hosp_netflow*100/beds, digits = 2),
cumul_remain_bed_rate = round(cumul_remain_bed*100/beds, digits = 2),
## pkrc
cumul_pkrc_netflow = cumsum(pkrc_netflow),
cumul_remain_pkrc_bed = pkrc_beds - cumul_pkrc_netflow,
cumul_pkrc_netflow_rate = round(cumul_pkrc_netflow*100/pkrc_beds, digits = 2),
cumul_remain_pkrc_rate = round(cumul_remain_pkrc_bed*100/pkrc_beds, digits = 2),
## icu & vent
remain_icu_covid_rate = round((beds_icu_covid - icu_covid - icu_pui - icu_noncovid)*100/beds_icu_covid, digits = 2),
remain_vent_covid_rate = round((vent - vent_covid - vent_pui - vent_noncovid)*100/vent, digits = 2)
) %>%
ungroup() %>%
## Per population
mutate(
cumul_not_full = pop - cumul_full, ## not having fully vaccination
cases_new_adjust = cases_new*100000/pop,
deaths_new_adjust = deaths_new*1000000/pop,
daily_full_adjust = daily_full*100000/pop,
cumul_full_adjust = cumul_full*100000/pop,
cumul_not_full_adjust = cumul_not_full*100/pop,
cumul_not_full_adjust = if_else(cumul_not_full_adjust < 0, 0, cumul_not_full_adjust), # to address over-injections for non-registered people
beds_adjust = beds*100000/pop,
beds_covid_adjust = beds_covid*100000/pop,
beds_noncrit_adjust = beds_noncrit*100000/pop,
beds_icu_total_adjust = beds_icu_total*100000/pop,
beds_icu_covid_adjust = beds_icu_covid*100000/pop,
vent_adjust = vent*100000/pop,
pkrc_beds_adjust = pkrc_beds*100000/pop
) %>%
mutate_if(is.numeric, ~if_else(. %nin% c(Inf, -Inf, NaN), ., NULL)) %>%
## Moving average
arrange(state, date) %>%
group_by(state) %>%
mutate(
cases_new_ma7 = rollmean(cases_new, k = 7, fill = NA, align = "right"),
cases_new_adjust_ma7 = rollmean(cases_new_adjust, k = 7, fill = NA, align = "right"),
deaths_new_ma7 = rollmean(deaths_new, k = 7, fill = NA, align = "right"),
deaths_new_adjust_ma7 = rollmean(deaths_new_adjust, k = 7, fill = NA, align = "right")
) %>%
ungroup() %>%
arrange(date, state)
dt_daily <- dt_case_state %>%
select(date, state, cases_new, cases_recovered) %>%
left_join(dt_death_state) %>%
left_join(dt_hospital) %>%
left_join(dt_icu %>%
mutate(beds_icu_covid = if_else((beds_icu_covid == 0) & (state == "Johor"), as.integer(10), beds_icu_covid))) %>%
left_join(dt_pkrc %>%
rename(
pkrc_beds = beds,
pkrc_admitted_pui = admitted_pui,
pkrc_admitted_covid = admitted_covid,
pkrc_admitted_total = admitted_total,
pkrc_discharge_pui = discharge_pui,
pkrc_discharge_covid = discharge_covid,
pkrc_discharge_total = discharge_total,
)) %>%
mutate(date = as.Date(date)) %>%
left_join(dt_vac_state %>%
select(date, state, daily_full, cumul_full, contains("2"), cansino) %>%
mutate(date = as.Date(date) + 14)) %>% ## delay 14 days for full
left_join(dt_population %>% select(state, pop))
temp_nation <- dt_daily %>%
group_by(date) %>%
summarise_if(is.numeric, sum, na.rm = TRUE) %>%
mutate(state = "All") %>%
ungroup()
dt_daily_state <- dt_daily %>%
add_row(temp_nation) %>%
mutate_if(is.numeric, ~replace_na(., 0)) %>%
mutate(
hosp_netflow = admitted_total - discharged_total,
pkrc_netflow = pkrc_admitted_total - pkrc_discharge_total
) %>%
group_by(state) %>%
mutate(
## hospital
cumul_hosp_netflow = cumsum(hosp_netflow),
cumul_remain_bed = beds_covid - cumul_hosp_netflow,
cumul_hosp_netflow_rate = round(cumul_hosp_netflow*100/beds, digits = 2),
cumul_remain_bed_rate = round(cumul_remain_bed*100/beds, digits = 2),
## pkrc
cumul_pkrc_netflow = cumsum(pkrc_netflow),
cumul_remain_pkrc_bed = pkrc_beds - cumul_pkrc_netflow,
cumul_pkrc_netflow_rate = round(cumul_pkrc_netflow*100/pkrc_beds, digits = 2),
cumul_remain_pkrc_rate = round(cumul_remain_pkrc_bed*100/pkrc_beds, digits = 2),
## icu & vent
remain_icu_covid_rate = round((beds_icu_covid - icu_covid - icu_pui - icu_noncovid)*100/beds_icu_covid, digits = 2),
remain_vent_covid_rate = round((vent - vent_covid - vent_pui - vent_noncovid)*100/vent, digits = 2)
) %>%
ungroup() %>%
## Per population
mutate(
cumul_not_full = pop - cumul_full, ## not having fully vaccination
cases_new_adjust = cases_new*100000/pop,
deaths_new_adjust = deaths_new*1000000/pop,
daily_full_adjust = daily_full*100000/pop,
cumul_full_adjust = cumul_full*100000/pop,
cumul_not_full_adjust = cumul_not_full*100/pop,
cumul_not_full_adjust = if_else(cumul_not_full_adjust < 0, 0, cumul_not_full_adjust), # to address over-injections for non-registered people
beds_adjust = beds*100000/pop,
beds_covid_adjust = beds_covid*100000/pop,
beds_noncrit_adjust = beds_noncrit*100000/pop,
beds_icu_total_adjust = beds_icu_total*100000/pop,
beds_icu_covid_adjust = beds_icu_covid*100000/pop,
vent_adjust = vent*100000/pop,
pkrc_beds_adjust = pkrc_beds*100000/pop
) %>%
mutate_if(is.numeric, ~if_else(. %nin% c(Inf, -Inf, NaN), ., NULL)) %>%
## Moving average
arrange(state, date) %>%
group_by(state) %>%
mutate(
cases_new_ma7 = rollmean(cases_new, k = 7, fill = NA, align = "right"),
cases_new_adjust_ma7 = rollmean(cases_new_adjust, k = 7, fill = NA, align = "right"),
deaths_new_ma7 = rollmean(deaths_new, k = 7, fill = NA, align = "right"),
deaths_new_adjust_ma7 = rollmean(deaths_new_adjust, k = 7, fill = NA, align = "right")
) %>%
ungroup() %>%
arrange(date, state)
rm(temp_nation, dt_daily)
## Cumulative
sum_cum <- dt_daily_state %>%
group_by(state) %>%
summarise(
cumul_cases_new = sum(cases_new, na.rm = TRUE),
cumul_cases_new_adjust = sum(cases_new_adjust, na.rm = TRUE),
cumul_deaths_new = sum(deaths_new, na.rm = TRUE),
cumul_deaths_new_adjust = sum(deaths_new_adjust, na.rm = TRUE),
cumul_daily_full = sum(daily_full, na.rm = TRUE),
cumul_daily_full_adjust = sum(daily_full_adjust, na.rm = TRUE),
# cum_recover = sum(cases_recovered, na.rm = TRUE)
) %>%
# mutate(
#   cum_active = cum_case - cum_recover,
#   cum_active_adj = cum_active*100000/32657400
# ) %>%
rename(name = state)
View(dt_population)
pop_all <- dt_population %>% filter(state == "Malaysia") %>% pull(pop)
pop_all
1940950/pop_all
1940950*100/pop_all
View(sum_cum)
sum_cum %>% filter(name == "All") %>% pull(cumul_cases_new)
runApp()
runApp()
runApp()
runApp()
View(dt_daily_state)
## heatmap
dt_daily_state_last7 <- dt_daily_state %>%
group_by(state, date) %>%
filter(row_number() > n() - 7)
## heatmap
dt_daily_state_last7 <- dt_daily_state %>%
group_by(state, date) %>%
filter(row_number() > (n() - 7))
## heatmap
dt_daily_state_last7 <- dt_daily_state %>%
group_by(state, date) %>%
pull(row_number())
dt_daily_state %>%
group_by(state, date) %>%
pull(row_number())
dt_daily_state %>%
group_by(state, date) %>%
pull(n())
## heatmap
dt_daily_state_last7 <- dt_daily_state %>%
group_by(state, date) %>%
mutate(row = n())
View(dt_daily_state_last7)
## heatmap
dt_daily_state_last7 <- dt_daily_state %>%
group_by(state) %>%
mutate(row = n())
## heatmap
dt_daily_state_last7 <- dt_daily_state %>%
group_by(state) %>%
filter(row_number() > (n() - 7))
View(dt_daily_state_last7)
17*7
group_by(state) %>%
filter(row_number() > (n() - 7))
## heatmap
dt_daily_state_last7 <- dt_daily_state %>%
select(state, date, cases_new, cases_new_adjust,deaths_new, deaths_new_adjust, daily_full, daily_full_adjust) %>%
group_by(state) %>%
filter(row_number() > (n() - 7))
## heatmap
dt_daily_state_last7 <- dt_daily_state %>%
select(state, date, cases_new, cases_new_adjust,deaths_new, deaths_new_adjust, daily_full, daily_full_adjust) %>%
group_by(state) %>%
filter(row_number() > (n() - 7)) %>%
pivot_wider(names_from = "date")
## heatmap
dt_daily_state_last7 <- dt_daily_state %>%
select(state, date, cases_new, cases_new_adjust,deaths_new, deaths_new_adjust, daily_full, daily_full_adjust) %>%
group_by(state) %>%
filter(row_number() > (n() - 7)) %>%
pivot_wider(id_cols = cases_new:daily_full_adjust, names_from = "date")
## heatmap
dt_daily_state_last7 <- dt_daily_state %>%
select(state, date, cases_new, cases_new_adjust,deaths_new, deaths_new_adjust, daily_full, daily_full_adjust) %>%
group_by(state) %>%
filter(row_number() > (n() - 7)) %>%
pivot_wider(values_from = cases_new, names_from = "date")
## heatmap
dt_daily_state_last7 <- dt_daily_state %>%
select(state, date, cases_new, cases_new_adjust,deaths_new, deaths_new_adjust, daily_full, daily_full_adjust) %>%
group_by(state) %>%
filter(row_number() > (n() - 7)) %>%
pivot_wider(id_cols = state, values_from = cases_new, names_from = date)
View(dt_daily_state_last7)
pull(dt_daily_state_last7 %>% select(date))
pull(dt_daily_state_last7 %>% select(-state))
## heatmap
dt_daily_state_last7 <- dt_daily_state %>%
select(state, date, cases_new, cases_new_adjust,deaths_new, deaths_new_adjust, daily_full, daily_full_adjust) %>%
group_by(state) %>%
filter(row_number() > (n() - 7)) %>%
pivot_wider(id_cols = state, values_from = cases_new, names_from = date) %>%
ungroup()
pull(dt_daily_state_last7 %>% select(-state))
colnames(dt_daily_state_last7 %>% select(-state))
dt_daily_state_last7 %>% pull(state)
as.matrix(dt_daily_state_last7() %>% select(-state))
as.matrix(dt_daily_state_last7 %>% select(-state))
plot_ly(
x = colnames(dt_daily_state_last7 %>% select(-state)), y = dt_daily_state_last7 %>% pull(state), z = as.matrix(dt_daily_state_last7 %>% select(-state)),
type = "heatmap", colors = colorRamp(c("red", "green"))
) %>%
layout(
yaxis = list(side = "left", title = "Width", color = "#ffffff")
)
## heatmap
dt_daily_state_last7 <- dt_daily_state %>%
select(state, date, cases_new_adjust, deaths_new_adjust, daily_full_adjust) %>%
group_by(state) %>%
filter(row_number() > (n() - 7)) %>%
pivot_wider(id_cols = state, values_from = cases_new, names_from = date) %>%
ungroup()
## heatmap
dt_daily_state_last7 <- dt_daily_state %>%
select(state, date, cases_new_adjust, deaths_new_adjust, daily_full_adjust) %>%
group_by(state) %>%
filter(row_number() > (n() - 7)) %>%
pivot_wider(id_cols = state, values_from = cases_new_adjust, names_from = date) %>%
ungroup()
plot_ly(
x = colnames(dt_daily_state_last7 %>% select(-state)), y = dt_daily_state_last7 %>% pull(state), z = as.matrix(dt_daily_state_last7 %>% select(-state)),
type = "heatmap", colors = colorRamp(c("red", "green"))
) %>%
layout(
yaxis = list(side = "left", title = "Width", color = "#ffffff")
)
plot_ly(
x = colnames(dt_daily_state_last7 %>% select(-state)), y = dt_daily_state_last7 %>% pull(state), z = as.matrix(dt_daily_state_last7 %>% select(-state)),
type = "heatmap", colors = colorRamp(c("red", "green"))
)
## heatmap
dt_daily_state_last7 <- dt_daily_state %>%
select(state, date, cases_new_adjust, deaths_new_adjust, daily_full_adjust) %>%
group_by(state) %>%
filter(row_number() > (n() - 7)) %>%
pivot_wider(id_cols = state, values_from = cases_new_adjust, names_from = date) %>%
ungroup() %>%
arrange(-state)
## heatmap
dt_daily_state_last7 <- dt_daily_state %>%
select(state, date, cases_new_adjust, deaths_new_adjust, daily_full_adjust) %>%
group_by(state) %>%
filter(row_number() > (n() - 7)) %>%
pivot_wider(id_cols = state, values_from = cases_new_adjust, names_from = date) %>%
ungroup() %>%
arrange(desc(state))
plot_ly(
x = colnames(dt_daily_state_last7 %>% select(-state)), y = dt_daily_state_last7 %>% pull(state), z = as.matrix(dt_daily_state_last7 %>% select(-state)),
type = "heatmap", colors = colorRamp(c("red", "green"))
)
plot_ly(
x = colnames(dt_daily_state_last7 %>% select(-state)), y = dt_daily_state_last7 %>% pull(state), z = as.matrix(dt_daily_state_last7 %>% select(-state)),
type = "heatmap", colors = colorRamp(c("green", "red"))
)
plot_ly(
x = colnames(dt_daily_state_last7 %>% select(-state)), y = dt_daily_state_last7 %>% pull(state), z = as.matrix(dt_daily_state_last7 %>% select(-state)),
type = "heatmap", colors = heat.colors(10)
)
plot_ly(
x = colnames(dt_daily_state_last7 %>% select(-state)), y = dt_daily_state_last7 %>% pull(state), z = as.matrix(dt_daily_state_last7 %>% select(-state)),
type = "heatmap", colors = "YlOrRd"
)
plot_ly(
x = colnames(dt_daily_state_last7 %>% select(-state)), y = dt_daily_state_last7 %>% pull(state), z = as.matrix(dt_daily_state_last7 %>% select(-state)),
type = "heatmap", colors = "OrRd"
)
runApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::deployApp("D:/Projects/Covid/COVMAL")
runApp()
rsconnect::deployApp("D:/Projects/Covid/COVMAL")
